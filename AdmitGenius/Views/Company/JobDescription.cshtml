@model AdmitGenius.Models.Job

<style>
    i {
        color: #667EEA;
    }

    .box i {
        color: black;
    }

    .article-left {
        border: 2px solid rgb(245, 245, 245);
        box-shadow: 2px;
    }

    .applybtn {
        border: 1px solid #667EEA;
    }

    .logo {
        padding: 12px;
        border: 2px solid rgb(245, 245, 245);
        border-radius: 100%;
    }

</style>

<section class="text-gray-500 body-font">
    <div class="container mx-auto flex px-5 py-24 md:flex-row flex-col">
        <div class="sticky lg:max-w-md lg:w-full md:w-1/3 w-5/6 md:mb-0">
            <div class="bg-white article-left p-6 rounded-lg">
                <div style="display: flex;justify-content: center;">
                    <img class=" h-25 rounded logo object-cover object-center mb-6" src="@Model.Company.CompanyLogo" alt="content" style="height: 200px;">
                </div>
                <h2 class="text-2xl text-gray-900 font-medium title-font mb-4">@Model.Company.CompanyName</h2>
                <p class="leading-relaxed text-base"> @Model.Company.CompanyDescription</p>
                <p class="my-4"><span class="mr-6"><i class="fa-solid fa-building"></i> FaceBook pvt. ltd.</span><span><i class="fa-solid fa-location-dot"></i> @Model.Company.CompanyLocation</span></p>
            </div>
        </div>
        <div class="lg:flex-grow md:w-1/2 lg:pl-24 md:pl-16 flex flex-col md:items-start md:text-left items-center text-center">
            <article class="article-3">
                <h1 class="title-font sm:text-2xl text-2xl mb-4 font-medium text-gray-900">Job Information:</h1>
                <div class="flex flex-wrap">
                    <div class="box-1 box border-2 border-gray-200 m-1 px-4 py-2 rounded-lg flex flex-row items-center">
                        <span class=""><i class="fa-solid fa-user"></i></span>
                        <div class="ml-4">
                            <h2 class="text-md text-gray-900 font-medium title-font mb-0">Employee Type:</h2>
                            <h4 class="text-md text-indigo-500">@Model.JobEmployeeType</h4>
                        </div>
                    </div>
                    <div class="box-2 box border-2 border-gray-200 m-1 px-4 py-2 rounded-lg flex flex-row items-center">
                        <span class=""><i class="fa-solid fa-location-dot"></i></span>
                        <div class="ml-4">
                            <h2 class="text-md text-gray-900 font-medium title-font mb-0">Location:</h2>
                            <h4 class="text-md text-indigo-500">@Model.JobLocation</h4>
                        </div>
                    </div>
                    <div class="box-3 box border-2 border-gray-200 m-1 px-4 py-2 rounded-lg flex flex-row items-center">
                        <span class=""><i class="fa-solid fa-clock"></i></span>
                        <div class="ml-4">
                            <h2 class="text-md text-gray-900 font-medium title-font mb-0">Date posted:</h2>
                            <h4 class="text-md text-indigo-500">@Model.JobPostedTime</h4>
                        </div>
                    </div>
                    <div class="box-4 box border-2 border-gray-200 m-1 px-4 py-2 rounded-lg flex flex-row items-center">
                        <span class=""><i class="fa-solid fa-desktop"></i></span>
                        <div class="ml-4">
                            <h2 class="text-md text-gray-900 font-medium title-font mb-0">Job Type:</h2>
                            <h4 class="text-md text-indigo-500">@Model.JobName</h4>
                        </div>
                    </div>
                    <div class="box-5 box border-2 border-gray-200 m-1 px-4 py-2 rounded-lg flex flex-row items-center">
                        <span class=""><i class="fa-solid fa-briefcase"></i></span>
                        <div class="ml-4">
                            <h2 class="text-md text-gray-900 font-medium title-font mb-0">Experience:</h2>
                            <h4 class="text-md text-indigo-500">+2 Year</h4>
                        </div>
                    </div>
                    <div class="box-6 box border-2 border-gray-200 m-1 px-4 py-2 rounded-lg flex flex-row items-center">
                        <span class=""><i class="fa-solid fa-medal"></i></span>
                        <div class="ml-4">
                            <h2 class="text-md text-gray-900 font-medium title-font mb-0">Qualifications:</h2>
                            <h4 class="text-md text-indigo-500">@Model.JobMiniQualification</h4>
                        </div>
                    </div>
                    <div class="box-7 box border-2 border-gray-200 m-1 px-4 py-2 rounded-lg flex flex-row items-center">
                        <span class=""><i class="fa-solid fa-dollar-sign"></i></span>
                        <div class="ml-4">
                            <h2 class="text-md text-gray-900 font-medium title-font mb-0">Salary:</h2>
                            <h4 class="text-md text-indigo-500">+@Model.JobMinSalary to @Model.JobMaxSalary</h4>
                        </div>
                    </div>
                </div>
            </article>
            <article class="article-1">
                <h1 class="title-font sm:text-2xl text-2xl my-4 font-medium text-gray-900">Job Description:</h1>
                <p class="mb-4 leading-relaxed">@Model.JobDescription</p>
            </article>


            <article class="article-2">
                <h3 class="title-font sm:text-2xl text-2xl my-4 font-medium text-gray-900">Responsibilities and Duties:</h3>
                <p class="mb-4 leading-relaxed">It sometimes makes sense to select texts containing the various letters and symbols specific to the output language.</p>

                <script>
                    // Get the job responsibilities string from the model
                    var jobResponsibilities = '@Model.JobResponsibility';

                    // Split the responsibilities using the '#' delimiter
                    var responsibilitiesArray = jobResponsibilities.split('#');

                    // Remove any empty strings from the array
                    responsibilitiesArray = responsibilitiesArray.filter(function (responsibility) {
                        return responsibility.trim() !== '';
                    });

                    // Get the container element
                    var container = document.querySelector('.article-2');

                    // Display each responsibility on a separate line with the icon and padding
                    responsibilitiesArray.forEach(function (responsibility) {
                        // Create a new <p> element for each responsibility
                        var paragraph = document.createElement('p');

                        // Create an <i> element for the icon
                        var icon = document.createElement('i');
                        icon.className = 'fa-solid fa-arrow-right';
                        icon.style.paddingRight = '5px'; // Set the padding between icon and text (you can adjust the value)

                        // Append the icon to the <p> element
                        paragraph.appendChild(icon);

                        // Set the text content of the <p> element to the responsibility
                        paragraph.innerHTML += ' ' + responsibility.trim(); // Add space before responsibility for formatting

                        // Add margin between two responsibilities
                        paragraph.style.marginBottom = '5px'; // Set the margin (you can adjust the value)

                        // Append the <p> element to the container
                        container.appendChild(paragraph);
                    });
                </script>

            </article>



            <article class="article-13">
                <h3 class="title-font sm:text-2xl text-2xl my-4 font-medium text-gray-900">Required Experience, Skills and Qualifications:</h3>
                <p class="mb-4 leading-relaxed">It sometimes makes sense to select texts containing the various letters and symbols specific to the output language.</p>

                <script>
                    // Get the job skills string from the model
                    var jobSkills = '@Model.JobRequirements';

                    // Split the skills using the '#' delimiter
                    var skillsArray = jobSkills.split('#');

                    // Remove any empty strings from the array
                    skillsArray = skillsArray.filter(function (skill) {
                        return skill.trim() !== '';
                    });

                    // Get the container element
                    var skillsContainer = document.querySelector('.article-13');

                    // Display each skill on a separate line with the icon and padding
                    skillsArray.forEach(function (skill) {
                        // Create a new <p> element for each skill
                        var skillParagraph = document.createElement('p');

                        // Create an <i> element for the icon
                        var skillIcon = document.createElement('i');
                        skillIcon.className = 'fa-solid fa-arrow-right';
                        skillIcon.style.paddingRight = '5px'; // Set the padding between icon and text (you can adjust the value)

                        // Append the icon to the <p> element
                        skillParagraph.appendChild(skillIcon);

                        // Set the text content of the <p> element to the skill
                        skillParagraph.innerHTML += ' ' + skill.trim(); // Add space before skill for formatting

                        // Add margin between two skills
                        skillParagraph.style.marginBottom = '5px'; // Set the margin (you can adjust the value)

                        // Append the <p> element to the container
                        skillsContainer.appendChild(skillParagraph);
                    });
                </script>

            </article>
            <form asp-action="Enroll" asp-route-JobId="@Model.JobId" method="post" enctype="multipart/form-data">
                <div class="flex justify-center">
                    <button type="submit" id="applyButton" class="applybtn inline-flex my-4 text-indigo-500 bg-white border-indigo-600 py-2 px-6 focus:outline-none hover:bg-indigo-500 hover:text-white rounded text-lg">
                        Apply Now&nbsp;<span class="applybtn-hover:block text-white"><i class="fa-solid fa-angles-right hover:text-white"></i></span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</section>